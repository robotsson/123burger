// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.Models;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(BurgerContext))]
    [Migration("20250114095546_BurgerDbInit")]
    partial class BurgerDbInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.Models.BurgerOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("BurgerOrders");
                });

            modelBuilder.Entity("webapi.Models.BurgerProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BurgerProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "dblcheese.jpg",
                            Name = "Double Cheeseburger",
                            Price = 4.00m,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 2,
                            Image = "cheese.jpg",
                            Name = "Cheeseburger",
                            Price = 2.50m,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 3,
                            Image = "burger.jpg",
                            Name = "Hamburger",
                            Price = 2.00m,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 4,
                            Image = "chickenburger.jpg",
                            Name = "Chicken burger",
                            Price = 3.00m,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 5,
                            Image = "veggieburger.jpg",
                            Name = "Veggie burger",
                            Price = 3.00m,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 6,
                            Image = "fries.jpg",
                            Name = "French fries",
                            Price = 1.50m,
                            Type = "Side Order"
                        },
                        new
                        {
                            Id = 7,
                            Image = "cheesefries.jpg",
                            Name = "Cheese fries",
                            Price = 2.00m,
                            Type = "Side Order"
                        },
                        new
                        {
                            Id = 8,
                            Image = "mayodip.jpg",
                            Name = "Mayo dip",
                            Price = 0.50m,
                            Type = "Side Order"
                        },
                        new
                        {
                            Id = 9,
                            Image = "garlicdip.jpg",
                            Name = "Garlic dip",
                            Price = 0.50m,
                            Type = "Side Order"
                        },
                        new
                        {
                            Id = 10,
                            Image = "guacamole.jpg",
                            Name = "Guacamole",
                            Price = 1.00m,
                            Type = "Side Order"
                        },
                        new
                        {
                            Id = 11,
                            Image = "cocacola.jpg",
                            Name = "Coca-cola",
                            Price = 1.00m,
                            Type = "Drink"
                        },
                        new
                        {
                            Id = 12,
                            Image = "cokezero.jpg",
                            Name = "Coke zero",
                            Price = 1.00m,
                            Type = "Drink"
                        },
                        new
                        {
                            Id = 13,
                            Image = "fanta.jpg",
                            Name = "Fanta",
                            Price = 1.00m,
                            Type = "Drink"
                        },
                        new
                        {
                            Id = 14,
                            Image = "sprite.jpg",
                            Name = "Sprite",
                            Price = 1.00m,
                            Type = "Drink"
                        },
                        new
                        {
                            Id = 15,
                            Image = "drpepper.jpg",
                            Name = "Dr Pepper",
                            Price = 1.00m,
                            Type = "Drink"
                        });
                });

            modelBuilder.Entity("webapi.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BurgerOrderId")
                        .HasColumnType("int");

                    b.Property<int>("BurgerProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BurgerOrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("webapi.Models.OrderItem", b =>
                {
                    b.HasOne("webapi.Models.BurgerOrder", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("BurgerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webapi.Models.BurgerOrder", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
